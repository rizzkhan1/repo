{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "projectCode": {
      "type": "string",
      "metadata": {
        "description": "Project code info for resource tagging purpose only"
      }
    },
    "requestorName": {
      "type": "string",
      "metadata": {
        "description": "Requestor's name for resource tagging purpose"
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "rksqldb"
    },
    "sqllogin": {
      "type": "string",
      "defaultValue": "sqladministrator"
    },
    "sqlPassword": {
      "type": "securestring"
    },
    "sqlserverName1": {
      "type": "string",
      "defaultValue": "rksqlservername"
    },
    "webappName": {
      "type": "string",
      "defaultValue": "rkwebapp"
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "rkhostingplan",
      "minLength": 1
    },
    "appInsightName": {
      "type": "string",
      "defaultValue": "rkAppInsight"
    },
    "webAppSuffix": {
      "type": "array",
      "defaultValue": [
        "App1",
        "App2",
        "App3"
      ],
      "metadata": {
        "description": "Describes name of the webapp suffix"
      }
    },
    "baseTemplateUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/rizzkhan1/repo/master/"
    },
    "appgatewayinstance": {
      "type": "bool",
      "defaultValue": true
    },
    "appgatewayvnet": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the Virtual Network"
      }
    },
    "appgatewaysubnet": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "appgatewaywafMode": {
      "type": "string",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "defaultValue": "Detection",
      "metadata": {
        "description": "WAF Mode"
      }
    },
    "appgatewaycapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances"
      }

    },
       
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },

    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    }
  },
  "variables": {
    "hostingplanApiVersion": "2016-09-01",
    "webappApiVersion": "2016-08-01",
    "connectionstringApiVersion": "2015-08-01",
    "sqlApiVersion": "2017-03-01-preview",
    "dbApiVersion": "2017-03-01-preview",
    "firewallApiVersion": "2014-04-01-preview",
    "autoscalingApiVersion": "2014-04-01",
    "alertrulesApiVersion": "2014-04-01",
    "insightComponentsApiVersion": "2014-04-01",
    "resourcesDeploymentApiVersion": "2018-11-01",
    "webSiteName": "[concat(parameters('webappName'),'-')]",
    "sqlserverName": "[concat(parameters('sqlserverName1'), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[variables('sqlserverName')]",
        "projectName": "[parameters('projectCode')]",
        "requestorName": "[parameters('requestorName')]",

      },
      "apiVersion": "[variables('sqlApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('sqllogin')]",
        "administratorLoginPassword": "[parameters('sqlPassword')]"
      },
      "resources": [
        {
          "name": "[parameters('databaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "[parameters('databaseName')]",
            "projectName": "[parameters('projectCode')]",
            "requestorName": "[parameters('requestorName')]"
          },
          "apiVersion": "[variables('dbApiVersion')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ],
          "properties": {
            "edition": "[parameters('edition')]",
            "collation": "[parameters('collation')]",
            "maxSizeBytes": "[parameters('maxSizeBytes')]",
            "requestedServiceObjectiveName": "[parameters('requestedServiceObjectiveName')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "[variables('firewallApiVersion')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('hostingplanApiVersion')]",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[parameters('hostingPlanName')]",
        "projectName": "[parameters('projectCode')]",
        "requestorName": "[parameters('requestorName')]"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "[variables('webappApiVersion')]",
      "name": "[concat(variables('webSiteName'), parameters('webappSuffix')[copyIndex()])]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]",
        "[resourceId('Microsoft.Sql/servers/databases/', variables('sqlserverName'), parameters('databaseName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty",
        "displayName": "[concat(variables('webSiteName'), parameters('webappSuffix')[copyIndex()])]",
        "projectName": "[parameters('projectCode')]",
        "requestorName": "[parameters('requestorName')]"
      },
      "copy": {
        "name": "websitescopy",
        "count": "[length(parameters('webappSuffix'))]"
      },
      "properties": {
        "name": "[concat(variables('webSiteName'), parameters('webappSuffix')[copyIndex()])]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "ConnString1",
              "connectionString": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('sqllogin'), '@', variables('sqlserverName'), ';Password=', parameters('sqlPassword'), ';')]"
            }
          ]
        }

      },
      "resources": [

      ]
    },
    {
      "apiVersion": "[variables('autoscalingApiVersion')]",
      "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
      "type": "Microsoft.Insights/autoscalesettings",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
        "projectName": "[parameters('projectCode')]",
        "requestorName": "[parameters('requestorName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      ],
      "properties": {
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": 1,
              "maximum": 2,
              "default": 1
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": true,
        "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      }
    },
    {
      "apiVersion": "[variables('alertrulesApiVersion')]",
      "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "CPUHighAlertRule",
        "projectName": "[parameters('projectCode')]",
        "requestorName": "[parameters('requestorName')]"
      },
      "properties": {
        "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
        "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
        "isEnabled": true,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
            "metricName": "CpuPercentage"
          },
          "operator": "GreaterThan",
          "threshold": 90,
          "windowSize": "PT15M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": [ "rizz.khan@outlook.com" ]
        }
      }
    },
    {
      "apiVersion": "[variables('alertrulesApiVersion')]",
      "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "AutoScaleSettings",
        "projectName": "[parameters('projectCode')]",
        "requestorName": "[parameters('requestorName')]"
      },
      "properties": {
        "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
        "description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
            "metricName": "HttpQueueLength"
          },
          "operator": "GreaterThan",
          "threshold": 100.0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": [ "rizz.khan@outlook.com" ]
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('appInsightName'),'-', parameters('webappSuffix')[copyIndex()])]",

      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "websitescopy"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/',variables('webSiteName'), parameters('webappSuffix')[copyIndex()])]": "Resource",

        "displayName": "AppInsightsComponent",
        "projectName": "[parameters('projectCode')]",
        "requestorName": "[parameters('requestorName')]"
      },
      "copy": {
        "name": "appinsightcopy",
        "count": "[length(parameters('webappSuffix'))]"
      },
      "properties": {
        "ApplicationId": "[concat(variables('webSiteName'), parameters('webappSuffix')[copyIndex()])]"
      }
    },
    {
      "apiVersion": "[variables('resourcesDeploymentApiVersion')]",
      "condition": "[parameters('appgatewayinstance')]",
      "name": "[concat(parameters('projectCode'),'-','AppGWDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "websitescopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUrl'), 'webappGatewayWaf.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "addressPrefix": { "value": "[parameters('appgatewayvnet')]" },
          "subnetPrefix": { "value": "[parameters('appgatewaysubnet')]" },
          "wafMode": { "value": "[parameters('appgatewaywafMode')]" },
          "capacity": { "value": "[parameters('appgatewaycapacity')]" },
          "backendAppService1": { "value": "[concat(variables('webSiteName'), parameters('webappSuffix')[0],'.azurewebsites.net')]" },
          "backendAppService2": { "value": "[concat(variables('webSiteName'), parameters('webappSuffix')[1],'.azurewebsites.net')]" },
          "backendAppService3": { "value": "[concat(variables('webSiteName'), parameters('webappSuffix')[2],'.azurewebsites.net')]" }
          
        }
      }
    }




  ]
}